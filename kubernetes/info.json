{
  "name": "kubernetes",
  "label": "Kubernetes",
  "version": "1.0.0",
  "description": "Kubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications.",
  "publisher": "Fortinet",
  "cs_approved": false,
  "cs_compatible": true,
  "category": "Container Services",
  "icon_small_name": "small.png",
  "icon_large_name": "large.png",
  "help_online": "https://github.com/fortinet-fortisoar/connector-kubernetes/blob/release/1.0.0/docs/KubernetesConnectorDoc.md",
  "configuration": {
    "fields": [
      {
        "name": "host",
        "title": "Server URL",
        "type": "text",
        "editable": true,
        "visible": true,
        "required": true,
        "description": "Specify the server URL on which K8s is hosted to connect and perform the automated operations.",
        "placeholder": "https://<Server URL>:Port Number"
      },
      {
        "name": "token",
        "title": "Token",
        "type": "password",
        "editable": true,
        "visible": true,
        "required": true,
        "tooltip": "Specify the token which you have generated for your service account.",
        "description": "Specify the token which you have generated for your service account."
      },
      {
        "name": "verify_ssl",
        "title": "Verify SSL",
        "type": "checkbox",
        "editable": true,
        "visible": true,
        "required": false,
        "value": true,
        "description": "Specifies whether the SSL certificate for the server is to be verified. \nBy default, this option is set to True."
      }
    ]
  },
  "operations": [
    {
      "operation": "apply_yml_file",
      "title": "Apply YAML File",
      "annotation": "apply_yml_file",
      "description": "Deploys the manifest file in your K8s cluster.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "title": "Attachment IRI",
          "name": "file_name",
          "visible": true,
          "required": true,
          "editable": true,
          "type": "text",
          "placeholder": "e.g /api/3/attachments/31e05bcc-f4b3-4dac-b1f8-3c5aa81d04d2",
          "tooltip": "IRI of the file that you want to submit.",
          "description": "IRI of the attachment that you want to submit."
        }
      ],
      "output_schema": {
        "success": ""
      }
    },
    {
      "operation": "list_namespace_pod",
      "title": "Get Namespace Pods List",
      "annotation": "list_namespace_pod",
      "description": "Retrieves all pods present in a namespace.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "name": "namespace",
          "title": "Namespace",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the namespace whose pods you want to retrieve",
          "description": "Specify the namespace whose pods you want to retrieve."
        }
      ],
      "output_schema": {
        "api_version": "",
        "items": [
          {
            "api_version": "",
            "kind": "",
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": ""
              },
              "creation_timestamp": "",
              "deletion_grace_period_seconds": "",
              "deletion_timestamp": "",
              "finalizers": "",
              "generate_name": "",
              "generation": "",
              "labels": "",
              "managed_fields": [
                {
                  "api_version": "",
                  "fields_type": "",
                  "fields_v1": {
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubectl.kubernetes.io/last-applied-configuration": {}
                      }
                    },
                    "f:spec": {
                      "f:containers": {
                        "k:{\"name\":\"c00\"}": {
                          ".": {},
                          "f:command": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:name": {},
                          "f:resources": {},
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "",
                  "operation": "",
                  "subresource": "",
                  "time": ""
                }
              ],
              "name": "",
              "namespace": "",
              "owner_references": "",
              "resource_version": "",
              "self_link": "",
              "uid": ""
            },
            "spec": {
              "active_deadline_seconds": "",
              "affinity": "",
              "automount_service_account_token": "",
              "containers": [
                {
                  "args": "",
                  "command": [],
                  "env": "",
                  "env_from": "",
                  "image": "",
                  "image_pull_policy": "",
                  "lifecycle": "",
                  "liveness_probe": "",
                  "name": "",
                  "ports": "",
                  "readiness_probe": "",
                  "resize_policy": "",
                  "resources": {
                    "claims": "",
                    "limits": "",
                    "requests": ""
                  },
                  "security_context": "",
                  "startup_probe": "",
                  "stdin": "",
                  "stdin_once": "",
                  "termination_message_path": "",
                  "termination_message_policy": "",
                  "tty": "",
                  "volume_devices": "",
                  "volume_mounts": [
                    {
                      "mount_path": "",
                      "mount_propagation": "",
                      "name": "",
                      "read_only": "",
                      "sub_path": "",
                      "sub_path_expr": ""
                    }
                  ],
                  "working_dir": ""
                }
              ],
              "dns_config": "",
              "dns_policy": "",
              "enable_service_links": "",
              "ephemeral_containers": "",
              "host_aliases": "",
              "host_ipc": "",
              "host_network": "",
              "host_pid": "",
              "host_users": "",
              "hostname": "",
              "image_pull_secrets": "",
              "init_containers": "",
              "node_name": "",
              "node_selector": "",
              "os": "",
              "overhead": "",
              "preemption_policy": "",
              "priority": "",
              "priority_class_name": "",
              "readiness_gates": "",
              "resource_claims": "",
              "restart_policy": "",
              "runtime_class_name": "",
              "scheduler_name": "",
              "scheduling_gates": "",
              "security_context": {
                "fs_group": "",
                "fs_group_change_policy": "",
                "run_as_group": "",
                "run_as_non_root": "",
                "run_as_user": "",
                "se_linux_options": "",
                "seccomp_profile": "",
                "supplemental_groups": "",
                "sysctls": "",
                "windows_options": ""
              },
              "service_account": "",
              "service_account_name": "",
              "set_hostname_as_fqdn": "",
              "share_process_namespace": "",
              "subdomain": "",
              "termination_grace_period_seconds": "",
              "tolerations": [
                {
                  "effect": "",
                  "key": "",
                  "operator": "",
                  "toleration_seconds": "",
                  "value": ""
                }
              ],
              "topology_spread_constraints": "",
              "volumes": [
                {
                  "aws_elastic_block_store": "",
                  "azure_disk": "",
                  "azure_file": "",
                  "cephfs": "",
                  "cinder": "",
                  "config_map": "",
                  "csi": "",
                  "downward_api": "",
                  "empty_dir": "",
                  "ephemeral": "",
                  "fc": "",
                  "flex_volume": "",
                  "flocker": "",
                  "gce_persistent_disk": "",
                  "git_repo": "",
                  "glusterfs": "",
                  "host_path": "",
                  "iscsi": "",
                  "name": "",
                  "nfs": "",
                  "persistent_volume_claim": "",
                  "photon_persistent_disk": "",
                  "portworx_volume": "",
                  "projected": {
                    "default_mode": "",
                    "sources": [
                      {
                        "config_map": "",
                        "downward_api": "",
                        "secret": "",
                        "service_account_token": {
                          "audience": "",
                          "expiration_seconds": "",
                          "path": ""
                        }
                      }
                    ]
                  },
                  "quobyte": "",
                  "rbd": "",
                  "scale_io": "",
                  "secret": "",
                  "storageos": "",
                  "vsphere_volume": ""
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "last_probe_time": "",
                  "last_transition_time": "",
                  "message": "",
                  "reason": "",
                  "status": "",
                  "type": ""
                }
              ],
              "container_statuses": [
                {
                  "allocated_resources": "",
                  "container_id": "",
                  "image": "",
                  "image_id": "",
                  "last_state": {
                    "running": "",
                    "terminated": "",
                    "waiting": ""
                  },
                  "name": "",
                  "ready": "",
                  "resources": "",
                  "restart_count": "",
                  "started": "",
                  "state": {
                    "running": {
                      "started_at": ""
                    },
                    "terminated": "",
                    "waiting": ""
                  }
                }
              ],
              "ephemeral_container_statuses": "",
              "host_ip": "",
              "init_container_statuses": "",
              "message": "",
              "nominated_node_name": "",
              "phase": "",
              "pod_ip": "",
              "pod_i_ps": [
                {
                  "ip": ""
                }
              ],
              "qos_class": "",
              "reason": "",
              "resize": "",
              "start_time": ""
            }
          }
        ],
        "kind": "",
        "metadata": {
          "_continue": "",
          "remaining_item_count": "",
          "resource_version": "",
          "self_link": ""
        }
      }
    },
    {
      "operation": "list_pod_for_all_namespaces",
      "title": "Get Pod For All Namespaces",
      "annotation": "list_pod_for_all_namespaces",
      "description": "Retrieves all the pods from all namespaces.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [],
      "output_schema": {
        "api_version": "",
        "items": [
          {
            "api_version": "",
            "kind": "",
            "metadata": {
              "annotations": "",
              "creation_timestamp": "",
              "deletion_grace_period_seconds": "",
              "deletion_timestamp": "",
              "finalizers": "",
              "generate_name": "",
              "generation": "",
              "labels": {
                "name": "",
                "pod-template-hash": ""
              },
              "managed_fields": [
                {
                  "api_version": "",
                  "fields_type": "",
                  "fields_v1": {
                    "f:metadata": {
                      "f:generateName": {},
                      "f:labels": {
                        ".": {},
                        "f:name": {},
                        "f:pod-template-hash": {}
                      },
                      "f:ownerReferences": {
                        ".": {},
                        "k:{\"uid\":\"802584d1-ddf5-43d6-8d6a-1fb5800b7f34\"}": {}
                      }
                    },
                    "f:spec": {
                      "f:containers": {
                        "k:{\"name\":\"c00\"}": {
                          ".": {},
                          "f:image": {},
                          "f:imagePullPolicy": {},
                          "f:name": {},
                          "f:ports": {
                            ".": {},
                            "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                              ".": {},
                              "f:containerPort": {},
                              "f:protocol": {}
                            }
                          },
                          "f:resources": {
                            ".": {},
                            "f:limits": {
                              ".": {},
                              "f:cpu": {}
                            },
                            "f:requests": {
                              ".": {},
                              "f:cpu": {}
                            }
                          },
                          "f:terminationMessagePath": {},
                          "f:terminationMessagePolicy": {}
                        }
                      },
                      "f:dnsPolicy": {},
                      "f:enableServiceLinks": {},
                      "f:restartPolicy": {},
                      "f:schedulerName": {},
                      "f:securityContext": {},
                      "f:terminationGracePeriodSeconds": {}
                    }
                  },
                  "manager": "",
                  "operation": "",
                  "subresource": "",
                  "time": ""
                }
              ],
              "name": "",
              "namespace": "",
              "owner_references": [
                {
                  "api_version": "",
                  "block_owner_deletion": "",
                  "controller": "",
                  "kind": "",
                  "name": "",
                  "uid": ""
                }
              ],
              "resource_version": "",
              "self_link": "",
              "uid": ""
            },
            "spec": {
              "active_deadline_seconds": "",
              "affinity": "",
              "automount_service_account_token": "",
              "containers": [
                {
                  "args": "",
                  "command": "",
                  "env": "",
                  "env_from": "",
                  "image": "",
                  "image_pull_policy": "",
                  "lifecycle": "",
                  "liveness_probe": "",
                  "name": "",
                  "ports": [
                    {
                      "container_port": "",
                      "host_ip": "",
                      "host_port": "",
                      "name": "",
                      "protocol": ""
                    }
                  ],
                  "readiness_probe": "",
                  "resize_policy": "",
                  "resources": {
                    "claims": "",
                    "limits": {
                      "cpu": ""
                    },
                    "requests": {
                      "cpu": ""
                    }
                  },
                  "security_context": "",
                  "startup_probe": "",
                  "stdin": "",
                  "stdin_once": "",
                  "termination_message_path": "",
                  "termination_message_policy": "",
                  "tty": "",
                  "volume_devices": "",
                  "volume_mounts": [
                    {
                      "mount_path": "",
                      "mount_propagation": "",
                      "name": "",
                      "read_only": "",
                      "sub_path": "",
                      "sub_path_expr": ""
                    }
                  ],
                  "working_dir": ""
                }
              ],
              "dns_config": "",
              "dns_policy": "",
              "enable_service_links": "",
              "ephemeral_containers": "",
              "host_aliases": "",
              "host_ipc": "",
              "host_network": "",
              "host_pid": "",
              "host_users": "",
              "hostname": "",
              "image_pull_secrets": "",
              "init_containers": "",
              "node_name": "",
              "node_selector": "",
              "os": "",
              "overhead": "",
              "preemption_policy": "",
              "priority": "",
              "priority_class_name": "",
              "readiness_gates": "",
              "resource_claims": "",
              "restart_policy": "",
              "runtime_class_name": "",
              "scheduler_name": "",
              "scheduling_gates": "",
              "security_context": {
                "fs_group": "",
                "fs_group_change_policy": "",
                "run_as_group": "",
                "run_as_non_root": "",
                "run_as_user": "",
                "se_linux_options": "",
                "seccomp_profile": "",
                "supplemental_groups": "",
                "sysctls": "",
                "windows_options": ""
              },
              "service_account": "",
              "service_account_name": "",
              "set_hostname_as_fqdn": "",
              "share_process_namespace": "",
              "subdomain": "",
              "termination_grace_period_seconds": "",
              "tolerations": [
                {
                  "effect": "",
                  "key": "",
                  "operator": "",
                  "toleration_seconds": "",
                  "value": ""
                }
              ],
              "topology_spread_constraints": "",
              "volumes": [
                {
                  "aws_elastic_block_store": "",
                  "azure_disk": "",
                  "azure_file": "",
                  "cephfs": "",
                  "cinder": "",
                  "config_map": "",
                  "csi": "",
                  "downward_api": "",
                  "empty_dir": "",
                  "ephemeral": "",
                  "fc": "",
                  "flex_volume": "",
                  "flocker": "",
                  "gce_persistent_disk": "",
                  "git_repo": "",
                  "glusterfs": "",
                  "host_path": "",
                  "iscsi": "",
                  "name": "",
                  "nfs": "",
                  "persistent_volume_claim": "",
                  "photon_persistent_disk": "",
                  "portworx_volume": "",
                  "projected": {
                    "default_mode": "",
                    "sources": [
                      {
                        "config_map": "",
                        "downward_api": "",
                        "secret": "",
                        "service_account_token": {
                          "audience": "",
                          "expiration_seconds": "",
                          "path": ""
                        }
                      }
                    ]
                  },
                  "quobyte": "",
                  "rbd": "",
                  "scale_io": "",
                  "secret": "",
                  "storageos": "",
                  "vsphere_volume": ""
                }
              ]
            },
            "status": {
              "conditions": [
                {
                  "last_probe_time": "",
                  "last_transition_time": "",
                  "message": "",
                  "reason": "",
                  "status": "",
                  "type": ""
                }
              ],
              "container_statuses": [
                {
                  "allocated_resources": "",
                  "container_id": "",
                  "image": "",
                  "image_id": "",
                  "last_state": {
                    "running": "",
                    "terminated": {
                      "container_id": "",
                      "exit_code": "",
                      "finished_at": "",
                      "message": "",
                      "reason": "",
                      "signal": "",
                      "started_at": ""
                    },
                    "waiting": ""
                  },
                  "name": "",
                  "ready": "",
                  "resources": "",
                  "restart_count": "",
                  "started": "",
                  "state": {
                    "running": {
                      "started_at": ""
                    },
                    "terminated": "",
                    "waiting": ""
                  }
                }
              ],
              "ephemeral_container_statuses": "",
              "host_ip": "",
              "init_container_statuses": "",
              "message": "",
              "nominated_node_name": "",
              "phase": "",
              "pod_ip": "",
              "pod_i_ps": [
                {
                  "ip": ""
                }
              ],
              "qos_class": "",
              "reason": "",
              "resize": "",
              "start_time": ""
            }
          }
        ],
        "kind": "",
        "metadata": {
          "_continue": "",
          "remaining_item_count": "",
          "resource_version": "",
          "self_link": ""
        }
      }
    },
    {
      "operation": "get_pod_logs",
      "title": "Get Pod logs",
      "annotation": "get_pod_logs",
      "description": "Retrieves the logs of a pod based on the namespace and pod name specified.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "name": "pod_name",
          "title": "Pod Name",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the Pod name whose logs to retrieve",
          "description": "Specify the Pod name whose logs you want to retrieve."
        },
        {
          "name": "namespace",
          "title": "Namespace",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the namespace name where the pod exists",
          "description": "Specify the namespace name where the pod exists."
        }
      ],
      "output_schema": {
        "data": ""
      }
    },
    {
      "operation": "delete_namespace_pod",
      "title": "Delete Namespace Pod",
      "annotation": "delete_namespace_pod",
      "description": "Delete a pod present in a namespace.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "name": "pod_name",
          "title": "Pod Name",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the Pod name which you want to delete",
          "description": "Specify the Pod name which you want to delete."
        },
        {
          "name": "namespace",
          "title": "Namespace",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the namespace name where the pod exists",
          "description": "Specify the namespace name where the pod exists."
        }
      ],
      "output_schema": {
        "api_version": "",
        "kind": "",
        "metadata": {
          "annotations": {
            "kubectl.kubernetes.io/last-applied-configuration": ""
          },
          "creation_timestamp": "",
          "deletion_grace_period_seconds": "",
          "deletion_timestamp": "",
          "finalizers": "",
          "generate_name": "",
          "generation": "",
          "labels": "",
          "managed_fields": [
            {
              "api_version": "",
              "fields_type": "",
              "fields_v1": {
                "f:metadata": {
                  "f:annotations": {
                    ".": {},
                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                  }
                },
                "f:spec": {
                  "f:containers": {
                    "k:{\"name\":\"c00\"}": {
                      ".": {},
                      "f:command": {},
                      "f:image": {},
                      "f:imagePullPolicy": {},
                      "f:name": {},
                      "f:resources": {},
                      "f:terminationMessagePath": {},
                      "f:terminationMessagePolicy": {}
                    }
                  },
                  "f:dnsPolicy": {},
                  "f:enableServiceLinks": {},
                  "f:restartPolicy": {},
                  "f:schedulerName": {},
                  "f:securityContext": {},
                  "f:terminationGracePeriodSeconds": {}
                }
              },
              "manager": "",
              "operation": "",
              "subresource": "",
              "time": ""
            }
          ],
          "name": "",
          "namespace": "",
          "owner_references": "",
          "resource_version": "",
          "self_link": "",
          "uid": ""
        },
        "spec": {
          "active_deadline_seconds": "",
          "affinity": "",
          "automount_service_account_token": "",
          "containers": [
            {
              "args": "",
              "command": [],
              "env": "",
              "env_from": "",
              "image": "",
              "image_pull_policy": "",
              "lifecycle": "",
              "liveness_probe": "",
              "name": "",
              "ports": "",
              "readiness_probe": "",
              "resize_policy": "",
              "resources": {
                "claims": "",
                "limits": "",
                "requests": ""
              },
              "security_context": "",
              "startup_probe": "",
              "stdin": "",
              "stdin_once": "",
              "termination_message_path": "",
              "termination_message_policy": "",
              "tty": "",
              "volume_devices": "",
              "volume_mounts": [
                {
                  "mount_path": "",
                  "mount_propagation": "",
                  "name": "",
                  "read_only": "",
                  "sub_path": "",
                  "sub_path_expr": ""
                }
              ],
              "working_dir": ""
            }
          ],
          "dns_config": "",
          "dns_policy": "",
          "enable_service_links": "",
          "ephemeral_containers": "",
          "host_aliases": "",
          "host_ipc": "",
          "host_network": "",
          "host_pid": "",
          "host_users": "",
          "hostname": "",
          "image_pull_secrets": "",
          "init_containers": "",
          "node_name": "",
          "node_selector": "",
          "os": "",
          "overhead": "",
          "preemption_policy": "",
          "priority": "",
          "priority_class_name": "",
          "readiness_gates": "",
          "resource_claims": "",
          "restart_policy": "",
          "runtime_class_name": "",
          "scheduler_name": "",
          "scheduling_gates": "",
          "security_context": {
            "fs_group": "",
            "fs_group_change_policy": "",
            "run_as_group": "",
            "run_as_non_root": "",
            "run_as_user": "",
            "se_linux_options": "",
            "seccomp_profile": "",
            "supplemental_groups": "",
            "sysctls": "",
            "windows_options": ""
          },
          "service_account": "",
          "service_account_name": "",
          "set_hostname_as_fqdn": "",
          "share_process_namespace": "",
          "subdomain": "",
          "termination_grace_period_seconds": "",
          "tolerations": [
            {
              "effect": "",
              "key": "",
              "operator": "",
              "toleration_seconds": "",
              "value": ""
            }
          ],
          "topology_spread_constraints": "",
          "volumes": [
            {
              "aws_elastic_block_store": "",
              "azure_disk": "",
              "azure_file": "",
              "cephfs": "",
              "cinder": "",
              "config_map": "",
              "csi": "",
              "downward_api": "",
              "empty_dir": "",
              "ephemeral": "",
              "fc": "",
              "flex_volume": "",
              "flocker": "",
              "gce_persistent_disk": "",
              "git_repo": "",
              "glusterfs": "",
              "host_path": "",
              "iscsi": "",
              "name": "",
              "nfs": "",
              "persistent_volume_claim": "",
              "photon_persistent_disk": "",
              "portworx_volume": "",
              "projected": {
                "default_mode": "",
                "sources": [
                  {
                    "config_map": "",
                    "downward_api": "",
                    "secret": "",
                    "service_account_token": {
                      "audience": "",
                      "expiration_seconds": "",
                      "path": ""
                    }
                  }
                ]
              },
              "quobyte": "",
              "rbd": "",
              "scale_io": "",
              "secret": "",
              "storageos": "",
              "vsphere_volume": ""
            }
          ]
        },
        "status": {
          "conditions": [
            {
              "last_probe_time": "",
              "last_transition_time": "",
              "message": "",
              "reason": "",
              "status": "",
              "type": ""
            }
          ],
          "container_statuses": [
            {
              "allocated_resources": "",
              "container_id": "",
              "image": "",
              "image_id": "",
              "last_state": {
                "running": "",
                "terminated": "",
                "waiting": ""
              },
              "name": "",
              "ready": "",
              "resources": "",
              "restart_count": "",
              "started": "",
              "state": {
                "running": "",
                "terminated": "",
                "waiting": {
                  "message": "",
                  "reason": ""
                }
              }
            }
          ],
          "ephemeral_container_statuses": "",
          "host_ip": "",
          "init_container_statuses": "",
          "message": "",
          "nominated_node_name": "",
          "phase": "",
          "pod_ip": "",
          "pod_i_ps": "",
          "qos_class": "",
          "reason": "",
          "resize": "",
          "start_time": ""
        }
      }
    },
    {
      "operation": "delete_collection_namespace_pod",
      "title": "Delete Collection Namespace Pods",
      "annotation": "delete_collection_namespace_pod",
      "description": "Delete all pods present in a namespace.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "name": "namespace",
          "title": "Namespace",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the namespace name from which you want to delete the pods",
          "description": "Specify the namespace name from which you want to delete the pods."
        }
      ],
      "output_schema": {
        "api_version": "",
        "code": "",
        "details": "",
        "kind": "",
        "message": "",
        "metadata": {
          "_continue": "",
          "remaining_item_count": "",
          "resource_version": "",
          "self_link": ""
        },
        "reason": "",
        "status": ""
      }
    },
    {
      "operation": "delete_collection_namespace_secret",
      "title": "Delete Collection Namespace Secret",
      "annotation": "delete_collection_namespace_secret",
      "description": "Delete all secrets present in a namespace.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "name": "namespace",
          "title": "Namespace",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the namespace name from where to delete all secrets",
          "description": "Specify the namespace name from where to delete all secret."
        }
      ],
      "output_schema": {
        "api_version": "",
        "code": "",
        "details": "",
        "kind": "",
        "message": "",
        "metadata": {
          "_continue": "",
          "remaining_item_count": "",
          "resource_version": "",
          "self_link": ""
        },
        "reason": "",
        "status": ""
      }
    },
    {
      "operation": "delete_namespace_secret",
      "title": "Delete Namespace Secret",
      "annotation": "delete_namespace_secret",
      "description": "Delete a secret present in a namespace.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "name": "secret_name",
          "title": "Secret Name",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the Secret name which you want to delete",
          "description": "Specify the Secret name which you want to delete."
        },
        {
          "name": "namespace",
          "title": "Namespace",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the namespace name from where to delete the secret",
          "description": "Specify the namespace name from where to delete the secret."
        }
      ],
      "output_schema": {
        "api_version": "",
        "code": "",
        "details": {
          "causes": "",
          "group": "",
          "kind": "",
          "name": "",
          "retry_after_seconds": "",
          "uid": ""
        },
        "kind": "",
        "message": "",
        "metadata": {
          "_continue": "",
          "remaining_item_count": "",
          "resource_version": "",
          "self_link": ""
        },
        "reason": "",
        "status": ""
      }
    },
    {
      "operation": "list_secret_for_all_namespaces",
      "title": "List Secret For All Namespaces",
      "annotation": "list_secret_for_all_namespaces",
      "description": "Retrieves secrets present in all namespace.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [],
      "output_schema": {
        "api_version": "",
        "items": [
          {
            "api_version": "",
            "data": {
              "ca.crt": "",
              "namespace": "",
              "token": ""
            },
            "immutable": "",
            "kind": "",
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/last-applied-configuration": "",
                "kubernetes.io/service-account.name": "",
                "kubernetes.io/service-account.uid": ""
              },
              "creation_timestamp": "",
              "deletion_grace_period_seconds": "",
              "deletion_timestamp": "",
              "finalizers": "",
              "generate_name": "",
              "generation": "",
              "labels": "",
              "managed_fields": [
                {
                  "api_version": "",
                  "fields_type": "",
                  "fields_v1": {
                    "f:data": {
                      ".": {},
                      "f:ca.crt": {},
                      "f:namespace": {},
                      "f:token": {}
                    },
                    "f:metadata": {
                      "f:annotations": {
                        "f:kubernetes.io/service-account.uid": {}
                      }
                    }
                  },
                  "manager": "",
                  "operation": "",
                  "subresource": "",
                  "time": ""
                }
              ],
              "name": "",
              "namespace": "",
              "owner_references": "",
              "resource_version": "",
              "self_link": "",
              "uid": ""
            },
            "string_data": "",
            "type": ""
          }
        ],
        "kind": "",
        "metadata": {
          "_continue": "",
          "remaining_item_count": "",
          "resource_version": "",
          "self_link": ""
        }
      }
    },
    {
      "operation": "delete_collection_namespace_config_map",
      "title": "Delete Collection Namespace ConfigMap",
      "annotation": "delete_collection_namespace_config_map",
      "description": "Delete all configmaps present in a namespace.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "name": "namespace",
          "title": "Namespace",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the namespace name from where to delete all the configmaps",
          "description": "Specify the namespace name from where you want to delete all the configmaps."
        }
      ],
      "output_schema": {
        "api_version": "",
        "code": "",
        "details": "",
        "kind": "",
        "message": "",
        "metadata": {
          "_continue": "",
          "remaining_item_count": "",
          "resource_version": "",
          "self_link": ""
        },
        "reason": "",
        "status": ""
      }
    },
    {
      "operation": "delete_namespace_config_map",
      "title": "Delete Namespace ConfigMaps",
      "annotation": "delete_namespace_config_map",
      "description": "Delete a configmap present in a namespace.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [
        {
          "name": "configmap_name",
          "title": "ConfigMap Name",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the ConfigMap name which you want to delete",
          "description": "Specify the ConfigMap name which you want to delete."
        },
        {
          "name": "namespace",
          "title": "Namespace",
          "type": "text",
          "editable": true,
          "visible": true,
          "required": true,
          "tooltip": "Specify the namespace name from where you want to delete the configmap",
          "description": "Specify the namespace name from where you want to delete the configmap."
        }
      ],
      "output_schema": {
        "api_version": "",
        "code": "",
        "details": {
          "causes": "",
          "group": "",
          "kind": "",
          "name": "",
          "retry_after_seconds": "",
          "uid": ""
        },
        "kind": "",
        "message": "",
        "metadata": {
          "_continue": "",
          "remaining_item_count": "",
          "resource_version": "",
          "self_link": ""
        },
        "reason": "",
        "status": ""
      }
    },
    {
      "operation": "list_config_map_for_all_namespaces",
      "title": "Get ConfigMap For All Namespaces",
      "annotation": "list_config_map_for_all_namespaces",
      "description": "Retrieves configmap present in all namespace.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [],
      "output_schema": {
        "api_version": "",
        "items": [
          {
            "api_version": "",
            "binary_data": "",
            "data": {
              "ca.crt": ""
            },
            "immutable": "",
            "kind": "",
            "metadata": {
              "annotations": {
                "kubernetes.io/description": ""
              },
              "creation_timestamp": "",
              "deletion_grace_period_seconds": "",
              "deletion_timestamp": "",
              "finalizers": "",
              "generate_name": "",
              "generation": "",
              "labels": "",
              "managed_fields": [
                {
                  "api_version": "",
                  "fields_type": "",
                  "fields_v1": {
                    "f:data": {
                      ".": {},
                      "f:ca.crt": {}
                    },
                    "f:metadata": {
                      "f:annotations": {
                        ".": {},
                        "f:kubernetes.io/description": {}
                      }
                    }
                  },
                  "manager": "",
                  "operation": "",
                  "subresource": "",
                  "time": ""
                }
              ],
              "name": "",
              "namespace": "",
              "owner_references": "",
              "resource_version": "",
              "self_link": "",
              "uid": ""
            }
          }
        ],
        "kind": "",
        "metadata": {
          "_continue": "",
          "remaining_item_count": "",
          "resource_version": "",
          "self_link": ""
        }
      }
    },
    {
      "operation": "list_event_for_all_namespaces",
      "title": "Get Events For All Namespaces",
      "annotation": "list_event_for_all_namespaces",
      "description": "Retrieves events of all namespace.",
      "category": "investigation",
      "visible": true,
      "enabled": true,
      "parameters": [],
      "output_schema": {
        "api_version": "",
        "items": [
          {
            "action": "",
            "api_version": "",
            "count": "",
            "event_time": "",
            "first_timestamp": "",
            "involved_object": {
              "api_version": "",
              "field_path": "",
              "kind": "",
              "name": "",
              "namespace": "",
              "resource_version": "",
              "uid": ""
            },
            "kind": "",
            "last_timestamp": "",
            "message": "",
            "metadata": {
              "annotations": "",
              "creation_timestamp": "",
              "deletion_grace_period_seconds": "",
              "deletion_timestamp": "",
              "finalizers": "",
              "generate_name": "",
              "generation": "",
              "labels": "",
              "managed_fields": [
                {
                  "api_version": "",
                  "fields_type": "",
                  "fields_v1": {
                    "f:count": {},
                    "f:firstTimestamp": {},
                    "f:involvedObject": {},
                    "f:lastTimestamp": {},
                    "f:message": {},
                    "f:reason": {},
                    "f:source": {
                      "f:component": {},
                      "f:host": {}
                    },
                    "f:type": {}
                  },
                  "manager": "",
                  "operation": "",
                  "subresource": "",
                  "time": ""
                }
              ],
              "name": "",
              "namespace": "",
              "owner_references": "",
              "resource_version": "",
              "self_link": "",
              "uid": ""
            },
            "reason": "",
            "related": "",
            "reporting_component": "",
            "reporting_instance": "",
            "series": "",
            "source": {
              "component": "",
              "host": ""
            },
            "type": ""
          }
        ],
        "kind": "",
        "metadata": {
          "_continue": "",
          "remaining_item_count": "",
          "resource_version": "",
          "self_link": ""
        }
      }
    }
  ]
}